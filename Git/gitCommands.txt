
-- CONFIGURACAO INICIAL --
git config --global user.name "username"
git config --global user.email "user@email.com"
git config --global core.editor vim
git config --list


-- CRIAR REPOSITORIO OFF --
git init


-- UTILIZANDO --
git status                  -> Status no repositorio
git add arquivo             -> Add arquivo para ser commitado
git commit -m "mensagem"    -> fazer commit com mensagem (-m)
git commit -am "mensagem"   -> adicionar todos os arquivos modificados (-a) e fazer commit com mensagem 
git log                     -> Informacoes dos commits
git log --decorate          -> + informacoes dos commits
git log --autor="username"  -> Commits de uma pessoa especifica
git log --shortlog          -> Quantidade de commits e nomes + informacoes
git shortlog -sn            -> Quantidade de commits e nomes
git log --graph             -> Mostra com grafico os branchs
git show HashDoCommit       -> Informacoes de alteracao commit ja feito
git diff                    -> Mostra as alteracoes ainda nao commitadas 
git diff --name-only        -> Mostra apenas o nome dos arquivos modificados
git checkout arquivo        -> Desfaz as alteracoes q ainda nao foram add
git reset HEAD arquivo      -> Tirar o arquivo do staged, tirar depois de add
git reset --soft HASH       -> Mata o commit e deixa as alteracoes dele ja add para serem commitadas
git reset --mixed HASH      -> Mata o commit e deixa as alteracoes como modificado e nao add
git reset --hard HASH       -> Mata totalmente o commit
 -- o hash do reset deve ser de um commit anterior ao que voce quer deletar, pois voltara o repositorio para ele --
git revert HASH             -> Reverte as modificacoes deste commit mas nao deleta o commit revertido, criando um novo commit com as alteracoes revertidas 


-- REPOSITORIO REMOTO --
Utilizar o SSH
sudo apt-get install openssh-server     -> instalar SSH
ssh-keygen -t rsa -C "email@nogit.com"  -> Criar uma chave
scp arquivo USER@IP:/home/USER          -> Enviar aquivo para outro PC na mesma rede
ssh -T git@github.com                   -> Conectar com GitHub

git remote add origin git@github.com:USER/REPOSITORIO.git    -> Liga os repositorios
git remote                   -> O nome do repositorio dado quando ligaram
git remote -v                -> + informacoes
git push -u origin mastar    -> Manda os arquivos salvar esse comando (-u) - pra onde vai - de onde vem 

git push origin master       -> Manda minhas alteracoes pro remoto
git clone Link nome          -> Clona todo um repositorio 
git clone git@github.com:lRods/Study.git Study-Clone


-- BRANCHS --
git checkout -b nomeBranch   -> Cria e entra em um ovo branch
git branch                   -> Mostra os branchs existentes com um asterisco no atual
git checkout nomeBranch      -> Muda para outro branch
git branch -D nomeBranch     -> Deleta um branch
git push :branch             -> Para deletar tambem no repositorio remoto


-- MERGE & REBASE --
Merge  -> Cria um novo commit pra juntar  
Rebase -> Adiciona ao historico linear
git merge branchPraJuntar    -> Faz um merge deste branch com o atual
git rebase branchPraJuntar   -> Faz um rebase deste branch com o atual


-- GITIGNORE --
Crie um arquivo ".gitignore" para especificar arquivos que nao devem subir para o repositorio
Existem arquivos ja prontos de padroes de projeto que podemos copiar
*.json    -> Ignora todos arquivos de uma extencao especifica
db.xls    -> Ignora um arquivo especifico


-- GIT STASH --
Guarda as alteracoes que ainda nao foram commitadas, removendo elas para outras alteracoes, permitindo que voce possa recupera-las depois
git stash         -> Guarda as modificacoes 
git stash applay  -> Aplica as modificacoes guardadas
git stash list    -> lista os stash guardados
git stash clear   -> limpa a lista de stash guardados


-- ALIAS --
Atalhos para comandos
git config --global alias.s status  -> Cria o atalho s para o comando status


-- TAGS --
Tags para marcar um ponto especifico do projeto, disponibilizando download direto desta tag
git tag -a 1.0.1 -m "Mensagem"   -> Cria a tag com versao e mensagem
git tag                          -> Mostra as tags geradas, pela versao de cada uma
git tag -d 1.0.1                 -> apaga a tag 1.0.1
git push :1.0.1                  -> para apagar tambem no repositorio remoto

